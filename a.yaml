# DO NOT MODIFY MANUALLY THIS FILE!
# IT IS AUTOGENERATED BY @kinopoisk-int/genaya.
# SOURCE CODE IS IN kinopoisk/frontend/infrafront/genaya/projects/packages/evgen/index.ts

service: kp
title: package/evgen

arcanum:
  review:
    auto_assign: true
    rules:
      - reviewers:
          - name: kpott_infrafront:developer
            assign: 1
            ship: 1

  auto_merge:
    requirements:
      - system: CI
        type: "kinopoisk/frontend/packages/evgen: package/evgen-action"
        disabling_policy: denied

ci:
  release-title-source: flow
  secret: sec-01fa03hy8yjdg41mpd3b4an1xj
  runtime:
    sandbox:
      owner: KINOPOISK_FRONTEND

  releases:
    package-evgen-release:
      title: package/evgen-release
      description: |
        
        ## Флоу
        - Отводится автоматически после мёрджа PR в trunk
        - Линтится, тестируется, публикуется пакет в npm.yandex-team.ru и в ya tool
        - [Старые релизы](https://a.yandex-team.ru/projects/kp/ci/releases/timeline?dir=kinopoisk%2Ffrontend%2Fpackages&id=evgen-release)
      flow: package-evgen-release-flow
      cleanup:
        reasons:
          - cancel
      branches:
        pattern: releases/kinopoisk-frontend/package/evgen/v${major}.${minor}
      versions:
        pattern: ${major}.${minor}.${patch}
        initial:
          major: "1"
          minor: 40
        default-increment: minor

  actions:
    package-evgen-action:
      title: package/evgen-action
      flow: package-evgen-pr-flow
      triggers:
        - on: pr
          into: trunk
      cleanup:
        conditions:
          - reasons:
              - new-diff-set
              - pr-discarded
              - pr-merged
            interrupt: true
            cleanup: true

  flows:
    package-evgen-release-flow:
      jobs:
        create-release-ticket:
          task: common/tracker/create_issue
          input:
            config:
              secret:
                key: startrek.token
            template:
              summary: Release package/evgen@${context.version}
              queue: KP
              type: release
              tags:
                - release/package/evgen
              linked:
                transition:
                  status: readyToDeploy
                  ignore_no_transition: true
              custom_fields:
                appVersion: package/evgen@${context.version}

        lint:
          needs: create-release-ticket
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              cmd_line: |
                source /etc/profile
                set -xe

                pnpm install --frozen-lockfile

                pnpm run --if-present lint

        jest:
          needs: create-release-ticket
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          runtime:
            sandbox:
              kill-timeout: 30m
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              result_resources:
                - path: .jest
                  description: Jest coverage report
                  type: OTHER_RESOURCE
                  compression_type: none
                  optional: true
                  ci_badge: true
                  ci_badge_path: .report/index.html
                  attributes:
                    branch: ${not_null(context.launch_pull_request_info.vcs_info.feature_branch, '')}
                    flow_launch_id: ${to_string(not_null(context.job_instance_id.flow_launch_id, ''))}
                    ttl: "7"
              cmd_line: |
                source /etc/profile
                set -x

                pnpm install --frozen-lockfile

                pnpm run --if-present test
                exit_code=$?

                if [[ -d .jest ]]; then
                    cp -r .jest $RESULT_RESOURCES_PATH
                fi
                exit $exit_code

        publish:
          needs:
            - lint
            - jest
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          runtime:
            sandbox:
              kill-timeout: 30m
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
                VERSION: ${context.version_info.full}
              secret_environment_variables_map:
                NPM_AUTH_TOKEN:
                  key: npm_authToken
              result_badges:
                - path: badges
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm install --frozen-lockfile

                npm version $VERSION

                package_name=$(node -p 'require("./package.json").name')
                npm_url=https://npm.yandex-team.ru/-/ui/package/$package_name/v/$VERSION

                npm publish

                echo "{\"id\": \"npm-registry\", \"module\": \"ARCADIA\", \"url\": \"$npm_url\", \"text\": \"npm-registry\", \"status\": \"SUCCESSFUL\" }" > $RESULT_BADGES_PATH/badges

        build-macos:
          needs: publish
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              result_resources:
                - path: evgen
                  type: YA_EVGENTOOL
                  compression_type: tgz
                  ci_badge: true
                  attributes:
                    released: stable
                    platform: macos
                    ttl: inf
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm i
                pnpm build

                npx -y pkg@5.8.1 -d -t node18-macos-x64 -o $RESULT_RESOURCES_PATH/evgen .
                if [[ macos == win32 ]]; then
                    mv $RESULT_RESOURCES_PATH/evgen.exe $RESULT_RESOURCES_PATH/evgen
                fi

        build-linux:
          needs: publish
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              result_resources:
                - path: evgen
                  type: YA_EVGENTOOL
                  compression_type: tgz
                  ci_badge: true
                  attributes:
                    released: stable
                    platform: linux
                    ttl: inf
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm i
                pnpm build

                npx -y pkg@5.8.1 -d -t node18-linux-x64 -o $RESULT_RESOURCES_PATH/evgen .
                if [[ linux == win32 ]]; then
                    mv $RESULT_RESOURCES_PATH/evgen.exe $RESULT_RESOURCES_PATH/evgen
                fi

        build-win32:
          needs: publish
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              result_resources:
                - path: evgen
                  type: YA_EVGENTOOL
                  compression_type: tgz
                  ci_badge: true
                  attributes:
                    released: stable
                    platform: win32
                    ttl: inf
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm i
                pnpm build

                npx -y pkg@5.8.1 -d -t node18-win-x64 -o $RESULT_RESOURCES_PATH/evgen .
                if [[ win32 == win32 ]]; then
                    mv $RESULT_RESOURCES_PATH/evgen.exe $RESULT_RESOURCES_PATH/evgen
                fi

        close-release-ticket:
          needs:
            - build-macos
            - build-linux
            - build-win32
          task: common/tracker/transit_issue
          input:
            transition:
              status: closed
              resolution: fixed
              ignore_no_transition: true
            update_template:
              linked:
                transition:
                  status: closed
                  resolution: fixed
                  ignore_no_transition: true
                comment: Выехало в релизе ${tasks.create-release-ticket.issue.issue}

      cleanup-jobs:
        close-invalid-release-ticket:
          if: ${context.cleanup_reason == 'CANCEL'}
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                QUEUE: KP
                VERSION: package/evgen@${context.version}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              cmd_line: |
                source /etc/profile
                set -ex

                kinopoisk/frontend/tools/ci/close-invalid-release-v2.sh

        deprecate-npm-package:
          if: ${context.cleanup_reason == 'CANCEL'}
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          runtime:
            sandbox:
              kill-timeout: 30m
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
                VERSION: ${context.version_info.full}
              secret_environment_variables_map:
                NPM_AUTH_TOKEN:
                  key: npm_authToken
              cmd_line: |
                source /etc/profile
                set -ex

                package_name=$(node -p 'require("./package.json").name')

                npm deprecate $package_name@$VERSION 'Release cancelled: ${context.ci_url}' || true

    package-evgen-pr-flow:
      jobs:
        lint:
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              cmd_line: |
                source /etc/profile
                set -xe

                pnpm install --frozen-lockfile

                pnpm run --if-present lint

        jest:
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          runtime:
            sandbox:
              kill-timeout: 30m
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              result_resources:
                - path: .jest
                  description: Jest coverage report
                  type: OTHER_RESOURCE
                  compression_type: none
                  optional: true
                  ci_badge: true
                  ci_badge_path: .report/index.html
                  attributes:
                    branch: ${not_null(context.launch_pull_request_info.vcs_info.feature_branch, '')}
                    flow_launch_id: ${to_string(not_null(context.job_instance_id.flow_launch_id, ''))}
                    ttl: "7"
              cmd_line: |
                source /etc/profile
                set -x

                pnpm install --frozen-lockfile

                pnpm run --if-present test
                exit_code=$?

                if [[ -d .jest ]]; then
                    cp -r .jest $RESULT_RESOURCES_PATH
                fi
                exit $exit_code

        publish:
          needs:
            - lint
            - jest
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          manual: true
          runtime:
            sandbox:
              kill-timeout: 30m
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
                VERSION: ${context.version_info.full}
                PR_NUMBER: ${to_string(context.launch_pull_request_info.pull_request.id)}
              secret_environment_variables_map:
                NPM_AUTH_TOKEN:
                  key: npm_authToken
              result_badges:
                - path: badges
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm install --frozen-lockfile

                full_version=0.0.0-pr-$PR_NUMBER-$VERSION

                npm version $full_version

                package_name=$(node -p 'require("./package.json").name')
                npm_url=https://npm.yandex-team.ru/-/ui/package/$package_name/v/$full_version
                    
                npm publish --tag="pr$PR_NUMBER"
                    
                curl -XPOST "https://a.yandex-team.ru/api/v1/review-requests/$PR_NUMBER/comments" \
                    -H "Authorization: OAuth $ARC_TOKEN" \
                    -H "Content-Type: application/json" \
                    -d "{
                    \"issue_status\": \"not_issue\",
                    \"content\": \"The package was published: [$package_name@$full_version]($npm_url)\",
                    \"draft\": false
                    }" -iv

                echo "{\"id\": \"npm-registry\", \"module\": \"ARCADIA\", \"url\": \"$npm_url\", \"text\": \"npm-registry\", \"status\": \"SUCCESSFUL\" }" > $RESULT_BADGES_PATH/badges

        skip-publish:
          needs:
            - lint
            - jest
          needs-type: any
          task: dummy

        finish:
          needs:
            - skip-publish
            - publish
            - build-macos
            - build-linux
            - build-win32
          needs-type: any
          task: dummy

        build-macos:
          needs:
            - jest
            - lint
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          manual: true
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              result_resources:
                - path: evgen
                  type: YA_EVGENTOOL
                  compression_type: tgz
                  ci_badge: true
                  attributes:
                    released: unstable
                    platform: macos
                    ttl: "14"
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm i
                pnpm build

                npx -y pkg@5.8.1 -d -t node18-macos-x64 -o $RESULT_RESOURCES_PATH/evgen .
                if [[ macos == win32 ]]; then
                    mv $RESULT_RESOURCES_PATH/evgen.exe $RESULT_RESOURCES_PATH/evgen
                fi

        build-linux:
          needs:
            - jest
            - lint
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          manual: true
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              result_resources:
                - path: evgen
                  type: YA_EVGENTOOL
                  compression_type: tgz
                  ci_badge: true
                  attributes:
                    released: unstable
                    platform: linux
                    ttl: "14"
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm i
                pnpm build

                npx -y pkg@5.8.1 -d -t node18-linux-x64 -o $RESULT_RESOURCES_PATH/evgen .
                if [[ linux == win32 ]]; then
                    mv $RESULT_RESOURCES_PATH/evgen.exe $RESULT_RESOURCES_PATH/evgen
                fi

        build-win32:
          needs:
            - jest
            - lint
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          manual: true
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
              secret_environment_variables_map:
                STARTREK_TOKEN:
                  key: STARTREK_TOKEN
              result_resources:
                - path: evgen
                  type: YA_EVGENTOOL
                  compression_type: tgz
                  ci_badge: true
                  attributes:
                    released: unstable
                    platform: win32
                    ttl: "14"
              cmd_line: |
                source /etc/profile
                set -ex

                pnpm i
                pnpm build

                npx -y pkg@5.8.1 -d -t node18-win-x64 -o $RESULT_RESOURCES_PATH/evgen .
                if [[ win32 == win32 ]]; then
                    mv $RESULT_RESOURCES_PATH/evgen.exe $RESULT_RESOURCES_PATH/evgen
                fi

      cleanup-jobs:
        deprecate-npm-package:
          task: common/misc/run_command
          requirements:
            cores: 1
            ram: 8 GB
            disk: 40 GB
            sandbox:
              dns: dns64
              client_tags: GENERIC & LINUX & SSD & PORTOD
              porto_layers:
                - 6122813573
                - 6108463329
          runtime:
            sandbox:
              kill-timeout: 30m
          input:
            config:
              arc_mount_config:
                enabled: true
              logs_config:
                redirect_stderr_to_stdout: true
                stdout_ci_badge: true
                add_timestamp: true
              environment_variables_map:
                PROJECT_DIR: ${context.config_info.dir}
                VERSION: ${context.version_info.full}
                PR_NUMBER: ${to_string(context.launch_pull_request_info.pull_request.id)}
              secret_environment_variables_map:
                NPM_AUTH_TOKEN:
                  key: npm_authToken
              cmd_line: |
                source /etc/profile
                set -ex

                full_version=0.0.0-pr-$PR_NUMBER-$VERSION

                package_name=$(node -p 'require("./package.json").name')

                npm deprecate $package_name@$full_version 'This version is deprecated in PR ${context.ci_url}' || true
